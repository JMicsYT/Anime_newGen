#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ API RandomTrust
"""

import requests
import time
import json

def test_api():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API endpoints"""
    
    base_url = "http://localhost:8000"
    
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ RandomTrust API...")
    print("=" * 50)
    
    # –¢–µ—Å—Ç 1: Health check
    try:
        print("1. –ü—Ä–æ–≤–µ—Ä–∫–∞ health endpoint...")
        response = requests.get(f"{base_url}/health", timeout=5)
        if response.status_code == 200:
            print("‚úÖ Health check –ø—Ä–æ–π–¥–µ–Ω")
            print(f"   –û—Ç–≤–µ—Ç: {response.json()}")
        else:
            print(f"‚ùå Health check –Ω–µ –ø—Ä–æ–π–¥–µ–Ω: {response.status_code}")
    except requests.exceptions.ConnectionError:
        print("‚ùå –ù–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ API. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –±—ç–∫–µ–Ω–¥ –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 8000")
        return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False
    
    # –¢–µ—Å—Ç 2: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —á–∏—Å–ª–∞
    try:
        print("\n2. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —á–∏—Å–ª–∞...")
        response = requests.get(f"{base_url}/generate?max_value=100", timeout=10)
        if response.status_code == 200:
            data = response.json()
            print("‚úÖ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞")
            print(f"   –ß–∏—Å–ª–æ: {data['final_number']}")
            print(f"   –í—Ä–µ–º—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏: {data['generation_time']:.3f}—Å")
            print(f"   –ò—Å—Ç–æ—á–Ω–∏–∫–æ–≤ —ç–Ω—Ç—Ä–æ–ø–∏–∏: {data['entropy_quality']['total_sources']}")
        else:
            print(f"‚ùå –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –Ω–µ —É–¥–∞–ª–∞—Å—å: {response.status_code}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏: {e}")
    
    # –¢–µ—Å—Ç 3: –°—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑
    try:
        print("\n3. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞...")
        test_numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10] * 10  # 100 —á–∏—Å–µ–ª
        response = requests.post(f"{base_url}/statistics", 
                              json=test_numbers, 
                              timeout=10)
        if response.status_code == 200:
            data = response.json()
            print("‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑ —É—Å–ø–µ—à–µ–Ω")
            print(f"   –°—Ä–µ–¥–Ω–µ–µ: {data['mean']:.3f}")
            print(f"   –î–∏—Å–ø–µ—Ä—Å–∏—è: {data['variance']:.3f}")
            print(f"   P-value: {data['p_value']:.6f}")
            print(f"   –°–ª—É—á–∞–π–Ω–æ—Å—Ç—å: {'–î–∞' if data['is_random'] else '–ù–µ—Ç'}")
        else:
            print(f"‚ùå –°—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑ –Ω–µ —É–¥–∞–ª—Å—è: {response.status_code}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞: {e}")
    
    # –¢–µ—Å—Ç 4: –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∏—Å—Ç–æ—á–Ω–∏–∫–∞—Ö —ç–Ω—Ç—Ä–æ–ø–∏–∏
    try:
        print("\n4. –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∏—Å—Ç–æ—á–Ω–∏–∫–∞—Ö —ç–Ω—Ç—Ä–æ–ø–∏–∏...")
        response = requests.get(f"{base_url}/entropy-sources", timeout=5)
        if response.status_code == 200:
            data = response.json()
            print("‚úÖ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∏—Å—Ç–æ—á–Ω–∏–∫–∞—Ö –ø–æ–ª—É—á–µ–Ω–∞")
            for source in data['sources']:
                print(f"   - {source['name']}: {source['description']}")
        else:
            print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∏—Å—Ç–æ—á–Ω–∏–∫–∞—Ö: {response.status_code}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏: {e}")
    
    print("\n" + "=" * 50)
    print("üéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
    return True

if __name__ == "__main__":
    test_api()
